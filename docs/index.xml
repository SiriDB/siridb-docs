<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SiriDB documentation</title>
    <link>https://docs.siridb.net/</link>
    <description>Recent content on SiriDB documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://docs.siridb.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ubuntu</title>
      <link>https://docs.siridb.net/getting_started/ubuntu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/getting_started/ubuntu/</guid>
      <description>For Ubuntu we have a deb package available which can be downloaded here.
Note: SiriDB requires libexpat1, libuv1, libpcre2-8-0 and libcleri0 these libraries can be easily installed using apt:
apt install libexpat1 libuv1 libpcre2-8-0 libcleri0  Library libcleri0 is available from Ubuntu 18.04, for older versions a deb package can be found here: https://github.com/transceptor-technology/libcleri/releases/latest
 The .deb package installs a configuration file at /etc/siridb/siridb.conf. You might want to view or change this file before starting SiriDB.</description>
    </item>
    
    <item>
      <title>Build from source</title>
      <link>https://docs.siridb.net/getting_started/build_from_source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/getting_started/build_from_source/</guid>
      <description>From version 2.0.19 libcleri is not included as part of this source anymore and needs to be installed separately. libcleri can be found here: https://github.com/transceptor-technology/libcleri or can be installed using apt.
 Linux Install the following requirements: (Ubuntu 18.04)
sudo apt install libcleri-dev sudo apt install libpcre2-dev sudo apt install libuv1-dev sudo apt install libyajl-dev sudo apt install uuid-dev Compile (replace Release with Debug for a debug build):
cd .</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://docs.siridb.net/getting_started/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/getting_started/configuration/</guid>
      <description>SiriDB can start with environment variables and/or with a configuration file. By default SiriDB will search for the configuration file in /etc/siridb/siridb.conf but alternatively you can specify a custom path by using the -c/--config argument.
$ siridb-server -c /my/path/siridb.conf An example configuration file can be found here: https://github.com/SiriDB/siridb-server/blob/master/siridb.conf
However be aware that the environment variables will overwrite the configuration file settings if both apply to the same setting.
Environmental variables:</description>
    </item>
    
    <item>
      <title>Start up server</title>
      <link>https://docs.siridb.net/getting_started/start_up_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/getting_started/start_up_server/</guid>
      <description>Now that SiriDB is installed and configured, you can start a SiriDB server:
$ siridb-server If you use a configuration file instead of the environment variables and this file is stored at a different location than the default /etc/siridb/siridb.conf; you have to specify the path using the -c/--config argument:
$ siridb-server -c /my/path/siridb.conf Flag information    Flag Description     -h, --help Show the help message and exit.</description>
    </item>
    
    <item>
      <title>Service account</title>
      <link>https://docs.siridb.net/overview/service_account/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/overview/service_account/</guid>
      <description>Service accounts are used for managing databases. A service account is a user on a SiriDB server, which should not be confused with a database user. A service account has no access to a SiriDB database. The reason for separating these accounts is that a database can extend over multiple servers, while a service account only gives access to a single server.
You can manage the service account(s) and database(s) via the SiriDB Admin tool or using the HTTP API.</description>
    </item>
    
    <item>
      <title>Database user</title>
      <link>https://docs.siridb.net/overview/database_user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/overview/database_user/</guid>
      <description>Database users have access to a SiriDB database and can insert and query data.
You can connect and work with a database via the SiriDB http tool, SiriDB prompt or using one of the options mentioned in the section Connect.
Every new SiriDB database has already one default user account installed: iris user with password siri.</description>
    </item>
    
    <item>
      <title>Series</title>
      <link>https://docs.siridb.net/overview/series/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/overview/series/</guid>
      <description>Series or time series can be seen as lists of data points. Time series in SiriDB are uniquely identified by name and can have any number of points. A single point consists of a timestamp and value. SiriDB allows you to insert points in any order. That way it is possible to backfill the database with old data while new values are coming in as well.
SiriDB supports time series for numeric data types (integer or float) and strings.</description>
    </item>
    
    <item>
      <title>Server, Pool &amp; Replica</title>
      <link>https://docs.siridb.net/overview/server_pool_replica/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/overview/server_pool_replica/</guid>
      <description>SiriDB can distribute time series across multiple pools and for redundancy each pool can have two servers. If one server in a pool fails; the other server, which is a replica, will still be able to handle all requests so the database can still be used. This is also helpful in case you want to install a new version of SiriDB. By upgrading one server in each pool at a time, upgrading can be done without any downtime.</description>
    </item>
    
    <item>
      <title>Buffer</title>
      <link>https://docs.siridb.net/overview/buffer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/overview/buffer/</guid>
      <description>When a server receives data it stores this in a buffer. The buffer is immediately saved on disk and is also kept in memory. The buffer can store a fixed number of points for each time series. This number depends on the buffer size which can be configured when creating a database. Since SiriDB does not read from the buffer-file, it does not matter in which order the points are saved.</description>
    </item>
    
    <item>
      <title>Shards</title>
      <link>https://docs.siridb.net/overview/shards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/overview/shards/</guid>
      <description>Shards are files for specific time-ranges. On the initial setup of a SiriDB database the shard duration must be chosen.
A single shard has chunks of ordered points, each with an index. This index consists of a time series identifier, a start time, end time and the number of points in the chunk. All points in a chunk belong to the time-range of the specific shard; so chunks between shards can never overlap in time.</description>
    </item>
    
    <item>
      <title>HTTP</title>
      <link>https://docs.siridb.net/connect/http_api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/connect/http_api/</guid>
      <description>Before using the HTTP API, make sure at least one node has the HTTP API port enabled. By default the API port is disabled, this can be changed by setting http_api_port in the configuration file or by setting the SIRIDB_HTTP_API_PORT environment variable.
The API has support for both JSON and qpack and can be used to perform service requests, inserts and queries.
Headers The header field Content-Type is required and needs application/json or application/qpack.</description>
    </item>
    
    <item>
      <title>Grafana SiriDB HTTP datasource</title>
      <link>https://docs.siridb.net/connect/grafana/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/connect/grafana/</guid>
      <description>A SiriDB data source plugin for Grafana.
Installation Go to the Grafana plugins folder. (usually this is /var/lib/grafana/plugins/)
cd /var/lib/grafana/plugins/ Clone the git project into the plugins folder:
git clone https://github.com/SiriDB/grafana-siridb-http-datasource.git Restart Grafana
sudo systemctl restart grafana-server.service Quick usage See the following blog article on how to configure and use this plugin: https://github.com/SiriDB/grafana-siridb-http-example.
More info A more complete description of the SiriDB data source plugin for Grafana can be found via the link below.</description>
    </item>
    
    <item>
      <title>Python</title>
      <link>https://docs.siridb.net/connect/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/connect/python/</guid>
      <description>The SiriDB Connector is a self-contained Python driver for communicating with SiriDB servers.
Installation From PyPI (recommended)
pip install siridb-connector From source code
python setup.py install Quick usage import asyncio import time import random from siridb.connector import SiriDBClient async def example(siri): # Start connecting to SiriDB. # .connect() returns a list of all connections referring to the supplied # hostlist. The list can contain exceptions in case a connection could not # be made.</description>
    </item>
    
    <item>
      <title>Golang</title>
      <link>https://docs.siridb.net/connect/go/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/connect/go/</guid>
      <description>A SiriDB-Connector for the Go language
Installation Install the package to your $GOPATH with the go tool from shell:
$ go get github.com/SiriDB/go-siridb-connector Make sure Git is installed on your machine and in your system&amp;rsquo;s PATH.
Quick usage Go SiriDB Connector can be used to communicate with a single SiriDB server and a more advanced client is provided which can connect to multiple SiriDB servers so queries and inserts are balanced.</description>
    </item>
    
    <item>
      <title>Libsiridb (library)</title>
      <link>https://docs.siridb.net/connect/libsuv/libsiridb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/connect/libsuv/libsiridb/</guid>
      <description>Libsiridb is a library which can be used to communicate with SiriDB using the C program language. This library contains useful functions but does not handle the connection itself.
Installation  Note: libsiridb requires libqpack
 Install debug or release version, in this example we will install the release version.
$ cd Release Compile libsiridb
$ make all Install libsiridb
$ sudo make install  Note: run sudo make uninstall for removal.</description>
    </item>
    
    <item>
      <title>Node.js</title>
      <link>https://docs.siridb.net/connect/nodejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/connect/nodejs/</guid>
      <description>Node.js add-on (C++) for SiriDB.
Installation node-gyp configure &amp;amp;&amp;amp; node-gyp build Quick usage const sdbaddon = require(&amp;#39;./build/Release/siridb&amp;#39;); var siridb = new sdbaddon.SiriDBClient( &amp;#34;iris&amp;#34;, // database user  &amp;#34;siri&amp;#34;, // password  &amp;#34;dbtest&amp;#34;, // database name  &amp;#34;localhost&amp;#34;, // server address  9000 // server port ); siridb.connect(err =&amp;gt; { // success: err is null  // error: err is a string with an error message  if (err) { console.error(`Connection error: ${err}`); } else { siridb.</description>
    </item>
    
    <item>
      <title>Java</title>
      <link>https://docs.siridb.net/connect/java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/connect/java/</guid>
      <description>The SiriDB Connector for Java is a self-contained Java driver for communicating with SiriDB servers.
Installation First you need to install the Java-QPack library. Add this library to your project.
Now you can install the connector. You can get a copy of the compiled jar file here or clone the repository and compile the code. Add the jar file as library to your project.
Quick usage The SiriDB Connector can be used to communicate with a single SiriDB server and a more advanced client is provided which can connect to multiple SiriDB servers so queries and inserts are balanced.</description>
    </item>
    
    <item>
      <title>PHP</title>
      <link>https://docs.siridb.net/connect/php/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/connect/php/</guid>
      <description>An C extension for PHP. Gives access to commands in PHP code to connect to SiriDB Server and query/insert.
Installation MacOS and Linux Make sure you have libsiridb and libqpack insatalled on your system and phpize available as command.
Run:
phpize ./configure make sudo make install Don&amp;rsquo;t forget to enable the extension via the php.ini file
Quick usage When installed, you are able to using the following in your php code.</description>
    </item>
    
    <item>
      <title>R</title>
      <link>https://docs.siridb.net/connect/r/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/connect/r/</guid>
      <description>R-connector for communicating with a SiriDB Database
Installation install.packages(&#39;siridbr&#39;) Quick usage library(siridbr) siridb &amp;lt;- SiriDB( user=&amp;quot;iris&amp;quot;, # database user password=&amp;quot;siri&amp;quot;, # password dbname=&amp;quot;dbtest&amp;quot;, # database name server=&amp;quot;localhost&amp;quot;, # server address port=9000L # server port ) siridb$connect(function(err) { # success: err is NULL # error: err is a string with an error message if (!is.null(err)) { cat(&#39;Connection error: &#39;, err) } else { siridb$close() } }) More info A more complete description of the R-connector can be found via the link below.</description>
    </item>
    
    <item>
      <title>time range</title>
      <link>https://docs.siridb.net/query_data/select/time_range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/select/time_range/</guid>
      <description>An optional time range can be given to select only a part of the series data. If no time range is provided SiriDB returns all the data available. As a time range we can use before, after or between .. and ..
When using after you basically set a start time, with before an end time and when using between .. and .. you set both a start and end time.</description>
    </item>
    
    <item>
      <title>merge data</title>
      <link>https://docs.siridb.net/query_data/select/merge_data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/select/merge_data/</guid>
      <description>When selecting points from multiple series you can merge the data together in one result. Most of the time you also want to provide an aggregate function with the merge so series get really merged into one series. Even with merge it&amp;rsquo;s still possible to use aggregate functions on the series before they are merged.
 Note
Sometimes it does not matter for the end result if you use an aggregate function on the series or only while merging.</description>
    </item>
    
    <item>
      <title>count</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/count/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/count/</guid>
      <description>Returns the number of points over a time window.
If no time window is provided it returns the total number of points in the series.
Function count([ts])  Arguments    Arguments Description     ts (optional) Time window. It can also be a timestamp that determines the end of the first time bucket starting at 1970-01-01.    Return value An integer value.
Example Count can be used to calculate points over a period of time.</description>
    </item>
    
    <item>
      <title>derivative</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/derivative/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/derivative/</guid>
      <description>The derivative can be used to get the difference per time unit. When no optional arguments are used the difference per one unit is returned. For example, in a database with second precision the return value will be the difference per second.
Function derivative([ts [, ts]])
Arguments    Arguments Description     ts (optional) Time unit; difference per given time unit   second ts (optional) Time window; used to get the difference between the first and last value within the given time window.</description>
    </item>
    
    <item>
      <title>difference</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/difference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/difference/</guid>
      <description>The difference between the first value and the last value within the time window.
Difference without a time span argument will return the difference between values.
Function difference([ts])  Arguments    Arguments Description     ts (optional) Time window; the difference between the first value and the last value within the time window.    Return value An integer or float value depending on the series data type.</description>
    </item>
    
    <item>
      <title>filter</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/filter/</guid>
      <description>Filter is used to filter the result by testing it to a value, regular expression or condition.
Function filter(val_regex_or_condition)  Arguments    Arguments Description     val_regex_or_condition A value, regular expression or condition    Return value An integer, float or string value depending on the series data type.
Example # Select all values from &#39;series-001&#39; except where the value is 0 select filter(!= 0) from &#39;series-001&#39; # Select all positive values from &#39;series-001&#39; select filter(&amp;gt; 0) from &#39;series-001&#39; # Select all values containing &#39;error&#39; and not &#39;unavailable select filter(~&#39;error&#39;) =&amp;gt; filter(!</description>
    </item>
    
    <item>
      <title>first</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/first/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/first/</guid>
      <description>Returns the first value in each ts time window. Or if no time window is provided it just returns the first value of the series.
Function first([ts])  Arguments    Arguments Description     ts (optional) Time window.    Return value An integer, float or string value depending on the series data type.
Example # Select the first value from &#39;series-001&#39; select first() from &#39;series-001&#39; # Select the first value per day from &#39;series-001&#39; select first(1d) from &#39;series-001&#39; # Select the first value in 2018 from &#39;series-001&#39; select first() from &#39;series-001&#39; after &#39;2018&#39;  </description>
    </item>
    
    <item>
      <title>last</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/last/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/last/</guid>
      <description>Returns the last value in each ts time window. Or if no time window is provided it just returns the last value of the series.
Function last([ts])  Arguments    Arguments Description     ts (optional) Time window.    Return value An integer, float or string value depending on the series data type.
Example # Select the last value from &#39;series-001&#39; select last() from &#39;series-001&#39; # Select the last value per day from &#39;series-001&#39; select last(1d) from &#39;series-001&#39; # Select the last value in 2017 from &#39;series-001&#39; select last() from &#39;series-001&#39; before &#39;2018&#39;  </description>
    </item>
    
    <item>
      <title>limit</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/limit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/limit/</guid>
      <description>Returns no more than the provided number of points and in case more points are found the aggregation function is used to reduce the number of points.
Function limit(max_points, aggr_function)  Arguments    Arguments Description     max_points Maximum number of points that gets returned.   aggr_function Aggregation function used if needed.    Return value Returns at most max_points and uses a given aggregation function to reduce the number of points if needed.</description>
    </item>
    
    <item>
      <title>max</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/max/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/max/</guid>
      <description>Max can be used to identify the highest value in the selected time window. If no time window is provided it returns the highest value of the series.
Function max([ts])  Arguments    Arguments Description     ts (optional) Time window.    Return value An integer or float value depending on the series data type.
Example # Get the maximum value in &#39;series-001&#39; over the last week.</description>
    </item>
    
    <item>
      <title>mean</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/mean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/mean/</guid>
      <description>Mean is used to calculate the average values per selected time window. If no time window is provided it returns the mean of the series.
Function mean([ts])  Arguments    Arguments Description     ts (optional) Time window.    Return value A float value.
Example # Get average value of &#39;series-001&#39; up until now. select mean(now) from &amp;quot;series-001&amp;quot; before now  </description>
    </item>
    
    <item>
      <title>median</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/median/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/median/</guid>
      <description>The median is a robust measure of central location, and is less affected by the presence of outliers in your data. When the number of data points is odd, the middle data point is returned as float value. When the number of data points is even, the median is interpolated by taking the average of the two middle values.
If no time window is provided it returns the median of the series.</description>
    </item>
    
    <item>
      <title>median high</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/median_high/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/median_high/</guid>
      <description>The high median is always a member of the data set. When the number of data points is odd, the middle value is returned. When it is even, the larger of the two middle values is returned.
If no time window is provided it returns the median_high of the series.
Function median_high([ts])  Arguments    Arguments Description     ts (optional) Time window.    Return value An integer or float value depending on the series data type.</description>
    </item>
    
    <item>
      <title>median low</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/median_low/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/median_low/</guid>
      <description>The low median is always a member of the data set. When the number of data points is odd, the middle value is returned. When it is even, the smaller of the two middle values is returned.
If no time window is provided it returns the median_low of the series.
Function median_low([ts])  Arguments    Arguments Description     ts (optional) Time window.    Return value An integer or float value depending on the series data type.</description>
    </item>
    
    <item>
      <title>min</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/min/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/min/</guid>
      <description>Min is the opposite of max, you identify the lowest value in the selected time window. If no time window is provided it returns the lowest value of the series.
Function min([ts])  Arguments    Arguments Description     ts (optional) Time window.    Return value An integer or float value depending on the series data type.
Example # Get the minimum value per day from &#39;series-001&#39; between two dates.</description>
    </item>
    
    <item>
      <title>pvariance</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/pvariance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/pvariance/</guid>
      <description>Returns the population variance of data, a non-empty iterable of real-valued numbers. Variance is a measure of the variability (spread or dispersion) of data. A large variance indicates that the data is spread out; a small variance indicates it is clustered closely around the mean.
If no time window is provided it returns the pvariance of the series.
Function pvariance([ts])  Arguments    Arguments Description     ts (optional) Time window.</description>
    </item>
    
    <item>
      <title>stddev</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/stddev/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/stddev/</guid>
      <description>Returns the standard deviation which is the square root of its variance. If no time window is provided it returns the standard deviation of the series.
Function stddev([ts])  Arguments    Arguments Description     ts (optional) Time window.    Return value A float value.
Example # Select standard deviation grouped by 1 hour. select stddev(1h) from &#39;series-001&#39;  </description>
    </item>
    
    <item>
      <title>sum</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/sum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/sum/</guid>
      <description>Sum can be used when you want to know the sum of the values over a period of time. If no time window is provided it returns the sum of the values in the series.
Function sum([ts])  Arguments    Arguments Description     ts (optional) Time window.    Return value An integer or float value depending on the series data type.
Example # Get the sum of the values collected over the last 24 hours per hour.</description>
    </item>
    
    <item>
      <title>variance</title>
      <link>https://docs.siridb.net/query_data/aggregate_functions/variance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/aggregate_functions/variance/</guid>
      <description>Returns the sample variance of data, an iterable of at least two real-valued numbers. Variance is a measure of the variability (spread or dispersion) of data. A large variance indicates that the data is spread out; a small variance indicates it is clustered closely around the mean.
If no time window is provided it returns the variance of the series.
Function  variance([ts])  Arguments    Arguments Description     ts (optional) Time window.</description>
    </item>
    
    <item>
      <title>timeit (debugging)</title>
      <link>https://docs.siridb.net/query_data/timeit_debugging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query_data/timeit_debugging/</guid>
      <description>Can be placed in front of any query and will return information about the time it took to process the query.
Syntax timeit &amp;lt;any_query&amp;gt;  Example result { &amp;quot;__timeit__&amp;quot;: [ { &amp;quot;time&amp;quot;: 0.001156334212755393, &amp;quot;server&amp;quot;: &amp;quot;server04.siridb.net:9010&amp;quot; }, { &amp;quot;time&amp;quot;: 0.001481771469116211, &amp;quot;server&amp;quot;: &amp;quot;server01.siridb.net:9010&amp;quot; } ] }  Here __timeit__ is an array containing response data from each server involved in processing the query. The last server in this list is the server who has received the query.</description>
    </item>
    
    <item>
      <title>columns</title>
      <link>https://docs.siridb.net/series/list_series/columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/series/list_series/columns/</guid>
      <description>Valid columns are:
 name: Series name pool: Pool where the series is assigned to start: Time-stamp of the first value in the series end: Time-stamp of the last value in the series length: The number of points in a series type: The series type. (&amp;ldquo;integer&amp;rdquo;, &amp;ldquo;float&amp;rdquo; or &amp;ldquo;string&amp;rdquo;)  When no columns are provided the default is used. (name)
Examples # list all series starting with &amp;quot;linux&amp;quot; by name list series /linux.</description>
    </item>
    
    <item>
      <title>match series</title>
      <link>https://docs.siridb.net/series/list_series/match_series/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/series/list_series/match_series/</guid>
      <description>Series can be matched using different methods. Groups can help to quickly get the required series even in a database with millions of unique series.
Syntax &amp;lt;series_name | regular_expression | group&amp;gt; [update_function &amp;lt;match_series&amp;gt;]  Series name A series name is a string containing the series name.
An advantage of using series names in a SiriDB cluster is that we know in which pool the series exists, because SiriDB sends data to a pool based on the series name.</description>
    </item>
    
    <item>
      <title>count series</title>
      <link>https://docs.siridb.net/series/count_series/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/series/count_series/</guid>
      <description>Count series in the SiriDB cluster. For more information about how to select series see list series.
Count series length gives the total number of points for the selected series.
Syntax count series [length] [match_series] [where ...]  Examples # Get number of series count series # Get the total number of points in the database count series length # Get number of series in group `group_server01` count series `group_server01` # Get number of points for series in pool 0 count series length where pool == 0 # Get the number of series which started in the last week count series where start &amp;gt; now - 1w and start &amp;lt;= now  Example output (series):</description>
    </item>
    
    <item>
      <title>drop series</title>
      <link>https://docs.siridb.net/series/drop_series/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/series/drop_series/</guid>
      <description>Drops series from SiriDB. Optionally you can use a match and/or where statement to filter the series you want to drop. For more information about how to match series look at list series.
SiriDB has a mechanism to protect you from accidentally dropping all (or many) series. This is done with a threshold value. If the server receives a drop request that contains more series than the threshold, the request is denied and you receive an error_msg.</description>
    </item>
    
    <item>
      <title>columns</title>
      <link>https://docs.siridb.net/shards/list_shards/columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/shards/list_shards/columns/</guid>
      <description>Valid columns are:
 start: Start timestamp for the shard end: End timestamp for the shard sid: Shard identifier (the same sid usually exist on multiple servers). server: Server name on which the shard exists. pool: Pool where the shard in exists. status: Status flags for the shard. type: Type of the shard (number or log). size: Size of the shard. This is the total shard size over all pools. When a pool has more servers (replicas) the displayed size can vary when running this query multiple times because servers are responsible for optimizing their own shards and this could result in different shard sizes.</description>
    </item>
    
    <item>
      <title>count shards</title>
      <link>https://docs.siridb.net/shards/count_shards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/shards/count_shards/</guid>
      <description>Count shards returns the number of shards on all online servers in a SiriDB cluster. This means that offline servers are ignored and replica servers are included in the query. It&amp;rsquo;s also possible to count the shards size in case you want to see the amount of disk-space the shards are using.
Syntax count shards [size] [where ...]  Examples # Get number of shards count shards # Get number of shards for the current points.</description>
    </item>
    
    <item>
      <title>drop shards</title>
      <link>https://docs.siridb.net/shards/drop_shards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/shards/drop_shards/</guid>
      <description>Drops an existing shard using the shard id (sid). Use list shards for an overview of the current shards. This statement requires all pools to have at least one online server. The number of dropped shard in the result message only contains the dropped shards of one member of a pool, not the shards which are dropped by a replica. This is different from the count shards statement which includes the shards on replica servers as well.</description>
    </item>
    
    <item>
      <title>create group</title>
      <link>https://docs.siridb.net/groups/create_group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/groups/create_group/</guid>
      <description>Groups should be between backticks to make them different from strings. Since a group is basically a cached regular expression we need to provide the regular expression we want to use for the group.
Syntax create group `groupname` for /regular_expression/  Example # Create a group linux create group `linux` for /linux.*/  </description>
    </item>
    
    <item>
      <title>count groups</title>
      <link>https://docs.siridb.net/groups/count_groups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/groups/count_groups/</guid>
      <description>Count groups returns the number of groups defined in the database.
Syntax count groups [where ...]  Examples # Get number of groups count groups # Get number of groups with more than 100 series count groups where series &amp;gt; 100  Example output:
{&amp;quot;groups&amp;quot;: 23} </description>
    </item>
    
    <item>
      <title>columns</title>
      <link>https://docs.siridb.net/groups/list_groups/columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/groups/list_groups/columns/</guid>
      <description>Valid columns are:
 name: Group name series: Number of series in the group. expression: Show the expression used for this group.  When no columns are provided the default is used. (name)
Examples # View all groups list groups # View groups and the expression used list groups name, expression # sample output (list groups) { &amp;quot;columns&amp;quot;: [&amp;quot;name&amp;quot;], &amp;quot;groups&amp;quot;: [ [&amp;quot;linux&amp;quot;], [&amp;quot;windows&amp;quot;]  </description>
    </item>
    
    <item>
      <title>set expression</title>
      <link>https://docs.siridb.net/groups/alter_group/set_expression/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/groups/alter_group/set_expression/</guid>
      <description>Change the regular expression for a group.
Examples # Create group `linux` create group `linux` for /linux.*/ # Change expression so we will match case insensitive alter group `linux` set expression /linux.*/i  </description>
    </item>
    
    <item>
      <title>set name</title>
      <link>https://docs.siridb.net/groups/alter_group/set_name/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/groups/alter_group/set_name/</guid>
      <description>Change the name for a group.
 Note
This statement expects a normal string using single or double quotes. The reason is that &amp;lsquo;set name&amp;rsquo; expects a string and not a group.
 Example # Rename group `linux` to `ubuntu` alter group `linux` set name &#39;ubuntu&#39;  </description>
    </item>
    
    <item>
      <title>drop groups</title>
      <link>https://docs.siridb.net/groups/drop_groups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/groups/drop_groups/</guid>
      <description>Drops an existing group.
Syntax drop group `groupname`  Example # Drop group `linux` drop group `linux` </description>
    </item>
    
    <item>
      <title>set backup mode</title>
      <link>https://docs.siridb.net/servers/alter_server/backup_mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/servers/alter_server/backup_mode/</guid>
      <description>When a backup_mode is enabled on a SiriDB server, all files in the database directory will be closed (both dbpath and buffer_path). This way you can make a backup of SiriDB without having problems with open files.
Example # Enable the backup_mode alter server f851c6a4-820e-11e5-9661-080027f37001 set backup_mode true  </description>
    </item>
    
    <item>
      <title>set log level</title>
      <link>https://docs.siridb.net/servers/alter_server/log_level/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/servers/alter_server/log_level/</guid>
      <description>With the argument &amp;ndash;log-level it&amp;rsquo;s possible to start with a certain log level. The default log level is info. If you want the log level to change while being online, this command can be used. It will not be saved when the server is restarted.
Valid log levels are &amp;ldquo;debug&amp;rdquo;, &amp;ldquo;info&amp;rdquo;, &amp;ldquo;warning&amp;rdquo;, &amp;ldquo;error&amp;rdquo; and &amp;ldquo;critical&amp;rdquo;
Example # Change the log-level to &amp;quot;debug&amp;quot; alter server f851c6a4-820e-11e5-9661-080027f37001 set log_level debug  </description>
    </item>
    
    <item>
      <title>set address/port</title>
      <link>https://docs.siridb.net/servers/alter_server/set_address_port/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/servers/alter_server/set_address_port/</guid>
      <description>Usually it&amp;rsquo;s not required to change the server&amp;rsquo;s address or port using this command but instead you should change the address/port in the configuration file (default /etc/siridb/siridb.conf). When the server gets online it will contact all SiriDB servers and they will automatically update to the new address/port in their local database. However, if all servers in a cluster are updated at once, we need to tell at least one SiriDB server where to find the other server(s).</description>
    </item>
    
    <item>
      <title>set tee pipe name</title>
      <link>https://docs.siridb.net/servers/alter_server/set_tee_pipe_name/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/servers/alter_server/set_tee_pipe_name/</guid>
      <description>Some projects like Enodo project may benefit from receiving all SiriDB data. Because these projects usually experience the same scaling problems as SiriDB does, we have chosen to support a tee option on each SiriDB server. Using this feature makes it possible to install a service on at least one SiriDB server in each pool. Such a service should install a UNIX Pipe server which accepts SiriDB data in QPack format.</description>
    </item>
    
    <item>
      <title>alter servers</title>
      <link>https://docs.siridb.net/servers/alter_servers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/servers/alter_servers/</guid>
      <description>You can alter the tee_pipe_name and/or log_level for n servers at once. Changing the tee pipe name and log level is explained in more detail at alter server.
Syntax alter servers [where...] set &amp;lt;option&amp;gt;  Example # Change the log-level to &amp;quot;debug&amp;quot; alter servers where uuid == &#39;f851c6a4-820e-11e5-9661-080027f37001&#39; set log_level debug  </description>
    </item>
    
    <item>
      <title>count servers</title>
      <link>https://docs.siridb.net/servers/count_servers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/servers/count_servers/</guid>
      <description>Count servers returns the number of servers in a SiriDB cluster.
Received_points are the number of points received by a server since uptime. And the selected points are the total number of queried points since uptime After a restart these counters are reset to zero.
 Info
Received points only shows the number of points after uptime. For the total number of points you can use count series length
 Syntax count servers [received_points/selected_points] [where .</description>
    </item>
    
    <item>
      <title>columns</title>
      <link>https://docs.siridb.net/servers/list_servers/columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/servers/list_servers/columns/</guid>
      <description>Valid columns are:
 active_handles: Returns the active handles which can be used as an indicator on how busy a server is. active_tasks: Returns the active tasks for the current database. address: Server address. buffer_path: Path where this server keeps the buffer file. buffer_size: Size the server uses for one series in the buffer. dbpath: Path where the server stores the database. fifo_files: Number of fifo files which are used to update the replica server.</description>
    </item>
    
    <item>
      <title>drop servers</title>
      <link>https://docs.siridb.net/servers/drop_servers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/servers/drop_servers/</guid>
      <description>Can be used to remove a server. We only allow dropping a server which has a replica since scaling down in number of pools is currently not supported. A server needs to be turned off before it can be dropped.
 Note
When having two servers in a pool, let&amp;rsquo;s call them siri1 and siri2 and for some reason siri2 is broken and does not start. You might be in a situation where siri1 is waiting for siri2 to connect and start to synchronize data.</description>
    </item>
    
    <item>
      <title>count pools</title>
      <link>https://docs.siridb.net/pools/count_pools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/pools/count_pools/</guid>
      <description>Count pools in the SiriDB cluster.
Syntax count pools [where ...]  Examples # Get number of pools count pools # Count the pools with more than 1000 series count pools where series &amp;gt; 1000  Example output:
{&amp;quot;pools&amp;quot;:2}  </description>
    </item>
    
    <item>
      <title>columns</title>
      <link>https://docs.siridb.net/pools/list_pools/columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/pools/list_pools/columns/</guid>
      <description>Valid columns are:
 pool: Returns the pool ID. series: Number of series in the pool. servers: Number of servers in the pool.  When no columns are provided the default is used. (pool, servers, series)
Examples # list pools with more than 1000 series list pools where series&amp;gt;1000 #list all series by pool and series list pools pool, series  </description>
    </item>
    
    <item>
      <title>create user</title>
      <link>https://docs.siridb.net/users/create_user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/users/create_user/</guid>
      <description>Create a new user. This will create a new user without access to SiriDB. For more information on how to grant access to a user see grant access.
Syntax create user &#39;my-username&#39; set password &#39;my-password&#39;  Examples # This will create a new user &#39;iris&#39; with password &#39;siri&#39; create user &#39;iris&#39; set password &#39;siri&#39; # Grant &amp;quot;read&amp;quot; access to &amp;quot;iris&amp;quot; grant read to user &amp;quot;iris&amp;quot;  </description>
    </item>
    
    <item>
      <title>count users</title>
      <link>https://docs.siridb.net/users/count_users/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/users/count_users/</guid>
      <description>Count users returns the number of users.
Syntax count users [where ...]  Examples # Get number of users count users # Get number of users not equal to &#39;iris&#39; count users where name != &#39;iris&#39;  Example output:
{&amp;quot;users&amp;quot;: 6}  </description>
    </item>
    
    <item>
      <title>columns</title>
      <link>https://docs.siridb.net/users/list_users/columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/users/list_users/columns/</guid>
      <description>Valid columns are:
 name: User name. access: Access rights assigned to the user.  When no columns are provided the default is used. (name, access)
Examples # List all users list users # List users with full access list users where access == full  </description>
    </item>
    
    <item>
      <title>alter user</title>
      <link>https://docs.siridb.net/users/alter_user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/users/alter_user/</guid>
      <description>Change the name or password of a user.
Syntax alter user &#39;username&#39; set &amp;lt;option&amp;gt;  Example # Change the password for &amp;quot;iris&amp;quot; to &amp;quot;siri&amp;quot; alter user &#39;iris&#39; set password &#39;siri&#39;  </description>
    </item>
    
    <item>
      <title>drop threshold</title>
      <link>https://docs.siridb.net/database/alter_database/drop_threshold/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/database/alter_database/drop_threshold/</guid>
      <description>This value is used to protect you from accidentally dropping data from SiriDB. The threshold is a value between 0 and 1 (0/100%). The threshold value is only checked against the pool receiving your query. The default threshold value is 1 (100%) but it might be a good idea to change this to a lower value.
 Note
Currently the drop_threshold is only used for dropping series and shards because these are the only queries where we allow to drop multiple entries at once.</description>
    </item>
    
    <item>
      <title>expiration log</title>
      <link>https://docs.siridb.net/database/alter_database/expiration_log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/database/alter_database/expiration_log/</guid>
      <description>When the expiration_log is enabled than log shards that are older than the provided value will be dropped. This setting should be an integer value with the time precision of the database.
By default this setting is disabled.
Examples # Suppose we have a second precision database, # then this will drop log shards, older than 4 weeks alter database set expiration_log 3600*24*7*4 # Disable shard expiration: alter database set expiration_log 0 After setting the expiration_log that results in more shards being dropped than the drop_threshold allows, an error is displayed and set ignore_threshold true may be added to ignore this warning.</description>
    </item>
    
    <item>
      <title>expiration num</title>
      <link>https://docs.siridb.net/database/alter_database/expiration_num/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/database/alter_database/expiration_num/</guid>
      <description>When the expiration_num is enabled than number shards that are older than the provided value will be dropped. This setting should be an integer value with the time precision of the database.
By default this setting is disabled.
Examples # Suppose we have a second precision database, # then this will drop number shards, older than 4 weeks alter database set expiration_num 3600*24*7*4 # Disable shard expiration: alter database set expiration_num 0 After setting the expiration_num that results in more shards being dropped than the drop_threshold allows, an error is displayed and set ignore_threshold true may be added to ignore this warning.</description>
    </item>
    
    <item>
      <title>list limit</title>
      <link>https://docs.siridb.net/database/alter_database/list_limit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/database/alter_database/list_limit/</guid>
      <description>Change the maximum value which can be used as a limit for a list statement. The default and recommended value is set to ten thousand to prevent queries which could take a large amount of memory. The value must be greater than or equal to 1000.
Example # Set the list limit to 50 thousand. alter database set list_limit 50000  </description>
    </item>
    
    <item>
      <title>select points limit</title>
      <link>https://docs.siridb.net/database/alter_database/select_points_limit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/database/alter_database/select_points_limit/</guid>
      <description>Change the maximum points which can be returned by a select query. The default and recommended value is set to one million points. This value is chosen to prevent a single query for taking to much memory and ensures that SiriDB can respond to almost any query in a reasonable amount of time.
Example # Increase the select points limit to 5 million alter database set select_points_limit 5000000  </description>
    </item>
    
    <item>
      <title>set timezone</title>
      <link>https://docs.siridb.net/database/alter_database/set_timezone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/database/alter_database/set_timezone/</guid>
      <description>Change the timezone for the database. When using a date/time in a query, SiriDB needs to convert the given date to a timestamp. Default NAIVE is used which means SiriDB is naive about the time zone and acts as if it&amp;rsquo;s a local time.
 Warning
When using a SiriDB database over multiple time zones it&amp;rsquo;s probably best to set the time zone to anything other than NAIVE since with NAIVE the server receiving the query will convert the date to a local time-stamp.</description>
    </item>
    
    <item>
      <title>timezones</title>
      <link>https://docs.siridb.net/database/timezones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/database/timezones/</guid>
      <description>For information on how to change the time zone see alter database.
 Note
There is one special time-zone, named NAIVE which is the default time-zone when creating a database. When this time-zone is used, a SiriDB server handles a given date as a local time. All other time zones can be found below.
  Africa/Abidjan Africa/Accra Africa/Addis_Ababa Africa/Algiers Africa/Asmara Africa/Bamako Africa/Bangui Africa/Banjul Africa/Bissau Africa/Blantyre Africa/Brazzaville Africa/Bujumbura Africa/Cairo Africa/Casablanca Africa/Ceuta Africa/Conakry Africa/Dakar Africa/Dar_es_Salaam Africa/Djibouti Africa/Douala Africa/El_Aaiun Africa/Freetown Africa/Gaborone Africa/Harare Africa/Johannesburg Africa/Juba Africa/Kampala Africa/Khartoum Africa/Kigali Africa/Kinshasa Africa/Lagos Africa/Libreville Africa/Lome Africa/Luanda Africa/Lubumbashi Africa/Lusaka Africa/Malabo Africa/Maputo Africa/Maseru Africa/Mbabane Africa/Mogadishu Africa/Monrovia Africa/Nairobi Africa/Ndjamena Africa/Niamey Africa/Nouakchott Africa/Ouagadougou Africa/Porto-Novo Africa/Sao_Tome Africa/Tripoli Africa/Tunis Africa/Windhoek America/Adak America/Anchorage America/Anguilla America/Antigua America/Araguaina America/Argentina/Buenos_Aires America/Argentina/Catamarca America/Argentina/Cordoba America/Argentina/Jujuy America/Argentina/La_Rioja America/Argentina/Mendoza America/Argentina/Rio_Gallegos America/Argentina/Salta America/Argentina/San_Juan America/Argentina/San_Luis America/Argentina/Tucuman America/Argentina/Ushuaia America/Aruba America/Asuncion America/Atikokan America/Bahia America/Bahia_Banderas America/Barbados America/Belem America/Belize America/Blanc-Sablon America/Boa_Vista America/Bogota America/Boise America/Cambridge_Bay America/Campo_Grande America/Cancun America/Caracas America/Cayenne America/Cayman America/Chicago America/Chihuahua America/Costa_Rica America/Creston America/Cuiaba America/Curacao America/Danmarkshavn America/Dawson America/Dawson_Creek America/Denver America/Detroit America/Dominica America/Edmonton America/Eirunepe America/El_Salvador America/Fort_Nelson America/Fortaleza America/Glace_Bay America/Godthab America/Goose_Bay America/Grand_Turk America/Grenada America/Guadeloupe America/Guatemala America/Guayaquil America/Guyana America/Halifax America/Havana America/Hermosillo America/Indiana/Indianapolis America/Indiana/Knox America/Indiana/Marengo America/Indiana/Petersburg America/Indiana/Tell_City America/Indiana/Vevay America/Indiana/Vincennes America/Indiana/Winamac America/Inuvik America/Iqaluit America/Jamaica America/Juneau America/Kentucky/Louisville America/Kentucky/Monticello America/Kralendijk America/La_Paz America/Lima America/Los_Angeles America/Lower_Princes America/Maceio America/Managua America/Manaus America/Marigot America/Martinique America/Matamoros America/Mazatlan America/Menominee America/Merida America/Metlakatla America/Mexico_City America/Miquelon America/Moncton America/Monterrey America/Montevideo America/Montserrat America/Nassau America/New_York America/Nipigon America/Nome America/Noronha America/North_Dakota/Beulah America/North_Dakota/Center America/North_Dakota/New_Salem America/Ojinaga America/Panama America/Pangnirtung America/Paramaribo America/Phoenix America/Port-au-Prince America/Port_of_Spain America/Porto_Velho America/Puerto_Rico America/Rainy_River America/Rankin_Inlet America/Recife America/Regina America/Resolute America/Rio_Branco America/Santa_Isabel America/Santarem America/Santiago America/Santo_Domingo America/Sao_Paulo America/Scoresbysund America/Sitka America/St_Barthelemy America/St_Johns America/St_Kitts America/St_Lucia America/St_Thomas America/St_Vincent America/Swift_Current America/Tegucigalpa America/Thule America/Thunder_Bay America/Tijuana America/Toronto America/Tortola America/Vancouver America/Whitehorse America/Winnipeg America/Yakutat America/Yellowknife Antarctica/Casey Antarctica/Davis Antarctica/DumontDUrville Antarctica/Macquarie Antarctica/Mawson Antarctica/McMurdo Antarctica/Palmer Antarctica/Rothera Antarctica/Syowa Antarctica/Troll Antarctica/Vostok Arctic/Longyearbyen Asia/Aden Asia/Almaty Asia/Amman Asia/Anadyr Asia/Aqtau Asia/Aqtobe Asia/Ashgabat Asia/Baghdad Asia/Bahrain Asia/Baku Asia/Bangkok Asia/Beirut Asia/Bishkek Asia/Brunei Asia/Chita Asia/Choibalsan Asia/Colombo Asia/Damascus Asia/Dhaka Asia/Dili Asia/Dubai Asia/Dushanbe Asia/Gaza Asia/Hebron Asia/Ho_Chi_Minh Asia/Hong_Kong Asia/Hovd Asia/Irkutsk Asia/Jakarta Asia/Jayapura Asia/Jerusalem Asia/Kabul Asia/Kamchatka Asia/Karachi Asia/Kathmandu Asia/Khandyga Asia/Kolkata Asia/Krasnoyarsk Asia/Kuala_Lumpur Asia/Kuching Asia/Kuwait Asia/Macau Asia/Magadan Asia/Makassar Asia/Manila Asia/Muscat Asia/Nicosia Asia/Novokuznetsk Asia/Novosibirsk Asia/Omsk Asia/Oral Asia/Phnom_Penh Asia/Pontianak Asia/Pyongyang Asia/Qatar Asia/Qyzylorda Asia/Rangoon Asia/Riyadh Asia/Sakhalin Asia/Samarkand Asia/Seoul Asia/Shanghai Asia/Singapore Asia/Srednekolymsk Asia/Taipei Asia/Tashkent Asia/Tbilisi Asia/Tehran Asia/Thimphu Asia/Tokyo Asia/Ulaanbaatar Asia/Urumqi Asia/Ust-Nera Asia/Vientiane Asia/Vladivostok Asia/Yakutsk Asia/Yekaterinburg Asia/Yerevan Atlantic/Azores Atlantic/Bermuda Atlantic/Canary Atlantic/Cape_Verde Atlantic/Faroe Atlantic/Madeira Atlantic/Reykjavik Atlantic/South_Georgia Atlantic/St_Helena Atlantic/Stanley Australia/Adelaide Australia/Brisbane Australia/Broken_Hill Australia/Currie Australia/Darwin Australia/Eucla Australia/Hobart Australia/Lindeman Australia/Lord_Howe Australia/Melbourne Australia/Perth Australia/Sydney Canada/Atlantic Canada/Central Canada/Eastern Canada/Mountain Canada/Newfoundland Canada/Pacific Europe/Amsterdam Europe/Andorra Europe/Athens Europe/Belgrade Europe/Berlin Europe/Bratislava Europe/Brussels Europe/Bucharest Europe/Budapest Europe/Busingen Europe/Chisinau Europe/Copenhagen Europe/Dublin Europe/Gibraltar Europe/Guernsey Europe/Helsinki Europe/Isle_of_Man Europe/Istanbul Europe/Jersey Europe/Kaliningrad Europe/Kiev Europe/Lisbon Europe/Ljubljana Europe/London Europe/Luxembourg Europe/Madrid Europe/Malta Europe/Mariehamn Europe/Minsk Europe/Monaco Europe/Moscow Europe/Oslo Europe/Paris Europe/Podgorica Europe/Prague Europe/Riga Europe/Rome Europe/Samara Europe/San_Marino Europe/Sarajevo Europe/Simferopol Europe/Skopje Europe/Sofia Europe/Stockholm Europe/Tallinn Europe/Tirane Europe/Uzhgorod Europe/Vaduz Europe/Vatican Europe/Vienna Europe/Vilnius Europe/Volgograd Europe/Warsaw Europe/Zagreb Europe/Zaporozhye Europe/Zurich GMT Indian/Antananarivo Indian/Chagos Indian/Christmas Indian/Cocos Indian/Comoro Indian/Kerguelen Indian/Mahe Indian/Maldives Indian/Mauritius Indian/Mayotte Indian/Reunion Pacific/Apia Pacific/Auckland Pacific/Bougainville Pacific/Chatham Pacific/Chuuk Pacific/Easter Pacific/Efate Pacific/Enderbury Pacific/Fakaofo Pacific/Fiji Pacific/Funafuti Pacific/Galapagos Pacific/Gambier Pacific/Guadalcanal Pacific/Guam Pacific/Honolulu Pacific/Johnston Pacific/Kiritimati Pacific/Kosrae Pacific/Kwajalein Pacific/Majuro Pacific/Marquesas Pacific/Midway Pacific/Nauru Pacific/Niue Pacific/Norfolk Pacific/Noumea Pacific/Pago_Pago Pacific/Palau Pacific/Pitcairn Pacific/Pohnpei Pacific/Port_Moresby Pacific/Rarotonga Pacific/Saipan Pacific/Tahiti Pacific/Tarawa Pacific/Tongatapu Pacific/Wake Pacific/Wallis US/Alaska US/Arizona US/Central US/Eastern US/Hawaii US/Mountain US/Pacific UTC  </description>
    </item>
    
    <item>
      <title>status information</title>
      <link>https://docs.siridb.net/database/status_information/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/database/status_information/</guid>
      <description>Syntax show [&amp;lt;option&amp;gt; [,&amp;lt;option&amp;gt; [...]]  See available options for more info on each show command:
 show active_handles: Returns the active handles which can be used as an indicator for how busy a server is. show active_tasks: Returns the active tasks for the current database. show buffer_path: Returns the local buffer path on this server. show buffer_size: Returns the buffer size in bytes on this server. show dbname: Returns the database name.</description>
    </item>
    
    <item>
      <title>access rights</title>
      <link>https://docs.siridb.net/access/access_rights/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/access/access_rights/</guid>
      <description>SiriDB knows the following access rights:
 select show list count create insert drop alter grant revoke  The most obvious ones are combined into access profiles which can be used to grant or revoke multiple access rights at once.
 read: (select, show, list and count) write: read + (create and insert) modify: write + (drop and alter) full: modify + (grant, revoke)   Warning
Changes to access rights are active immediately, so be careful when revoking access rights from users.</description>
    </item>
    
    <item>
      <title>grant access</title>
      <link>https://docs.siridb.net/access/grant_access/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/access/grant_access/</guid>
      <description>Grants access rights to a user. For information about access rights see access rights.
Syntax grant &amp;lt;access&amp;gt; to user &#39;username&#39;  Example # Grant drop and create to user &amp;quot;iris&amp;quot; grant drop, create to user &amp;quot;iris&amp;quot;  Output:
{&amp;quot;success_msg&amp;quot;: &amp;quot;Successfully granted permissions to user ...&amp;quot;}  </description>
    </item>
    
    <item>
      <title>revoke access</title>
      <link>https://docs.siridb.net/access/revoke_access/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/access/revoke_access/</guid>
      <description>Revokes access rights from a user. For information about access rights see access rights.
 Warning
If accidentally all access rights for all users are gone, you need to recover the default user. See restore access for how to recover from such a situation.
 Syntax revoke &amp;lt;access&amp;gt; from &#39;username&#39;  Example # Revoke drop and create from user &amp;quot;iris&amp;quot; revoke drop, create from user &amp;quot;iris&amp;quot;  Output:
{&amp;quot;success_msg&amp;quot;: &amp;quot;Successfully revoked permissions from .</description>
    </item>
    
    <item>
      <title>restore access</title>
      <link>https://docs.siridb.net/access/restore_access/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/access/restore_access/</guid>
      <description>Read/use this section when accidentally all access rights to a database are gone. Follow the steps below to recover the default user. (username: iris, password: siri)
Stop all servers in the SiriDB cluster.
# Assume you use systemd to start SiriDB... &amp;gt; sudo systemctl stop siridb-server.service   Warning
It&amp;rsquo;s really important to stop all servers in a SiriDB cluster to prevent database inconsistency.
 Remove the appropriate file on all servers in the SiriDB cluster.</description>
    </item>
    
    <item>
      <title>Enodo</title>
      <link>https://docs.siridb.net/related_projects/enodo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/related_projects/enodo/</guid>
      <description>Enodo is a time series data analysis platform made for SiriDB. Combining the power of storing and querying time series data from SiriDB and the analyzing power of Enodo, we can create better understanding of the data that we collect and store. So we can learn from the past and create forecasts for the future.
The Enodo platform is build in modules to create scalability. The Hub will control and organize the data that we have collected and the questions we want to ask about the data.</description>
    </item>
    
  </channel>
</rss>