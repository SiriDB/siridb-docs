<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Overview on SiriDB documentation</title><link>https://docs.siridb.com/overview/</link><description>Recent content in Overview on SiriDB documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://docs.siridb.com/overview/index.xml" rel="self" type="application/rss+xml"/><item><title>Service account</title><link>https://docs.siridb.com/overview/service_account/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.siridb.com/overview/service_account/</guid><description>Service accounts are used for managing databases. A service account is a user on a SiriDB server, which should not be confused with a database user. A service account has no access to a SiriDB database. The reason for separating these accounts is that a database can extend over multiple servers, while a service account only gives access to a single server.
You can manage the service account(s) and database(s) via the SiriDB Admin tool or using the HTTP API.</description></item><item><title>Database user</title><link>https://docs.siridb.com/overview/database_user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.siridb.com/overview/database_user/</guid><description>Database users have access to a SiriDB database and can insert and query data.
You can connect and work with a database via the SiriDB http tool, SiriDB prompt or using one of the options mentioned in the section Connect.
Every new SiriDB database has already one default user account installed: iris user with password siri.</description></item><item><title>Series</title><link>https://docs.siridb.com/overview/series/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.siridb.com/overview/series/</guid><description>Series or time series can be seen as lists of data points. Time series in SiriDB are uniquely identified by name and can have any number of points. A single point consists of a timestamp and value. SiriDB allows you to insert points in any order. That way it is possible to backfill the database with old data while new values are coming in as well.
SiriDB supports time series for numeric data types (integer or float) and strings.</description></item><item><title>Server, Pool &amp; Replica</title><link>https://docs.siridb.com/overview/server_pool_replica/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.siridb.com/overview/server_pool_replica/</guid><description>SiriDB can distribute time series across multiple pools and for redundancy each pool can have two servers. If one server in a pool fails; the other server, which is a replica, will still be able to handle all requests so the database can still be used. This is also helpful in case you want to install a new version of SiriDB. By upgrading one server in each pool at a time, upgrading can be done without any downtime.</description></item><item><title>Buffer</title><link>https://docs.siridb.com/overview/buffer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.siridb.com/overview/buffer/</guid><description>When a server receives data it stores this in a buffer. The buffer is immediately saved on disk and is also kept in memory. The buffer can store a fixed number of points for each time series. This number depends on the buffer size which can be configured when creating a database. Since SiriDB does not read from the buffer-file, it does not matter in which order the points are saved.</description></item><item><title>Shards</title><link>https://docs.siridb.com/overview/shards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.siridb.com/overview/shards/</guid><description>Shards are files for specific time-ranges. On the initial setup of a SiriDB database the shard duration must be chosen.
A single shard has chunks of ordered points, each with an index. This index consists of a time series identifier, a start time, end time and the number of points in the chunk. All points in a chunk belong to the time-range of the specific shard; so chunks between shards can never overlap in time.</description></item></channel></rss>