<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>alter database on SiriDB documentation</title><link>https://docs.siridb.net/database/alter_database/</link><description>Recent content in alter database on SiriDB documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://docs.siridb.net/database/alter_database/index.xml" rel="self" type="application/rss+xml"/><item><title>drop threshold</title><link>https://docs.siridb.net/database/alter_database/drop_threshold/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.siridb.net/database/alter_database/drop_threshold/</guid><description>This value is used to protect you from accidentally dropping data from SiriDB. The threshold is a value between 0 and 1 (0/100%). The threshold value is only checked against the pool receiving your query. The default threshold value is 1 (100%) but it might be a good idea to change this to a lower value.
Note
Currently the drop_threshold is only used for dropping series and shards because these are the only queries where we allow to drop multiple entries at once.</description></item><item><title>expiration log</title><link>https://docs.siridb.net/database/alter_database/expiration_log/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.siridb.net/database/alter_database/expiration_log/</guid><description>When the expiration_log is enabled than log shards that are older than the provided value will be dropped. This setting should be an integer value with the time precision of the database.
By default this setting is disabled.
Examples # Suppose we have a second precision database, # then this will drop log shards, older than 4 weeks alter database set expiration_log 3600*24*7*4 # Disable shard expiration: alter database set expiration_log 0 After setting the expiration_log that results in more shards being dropped than the drop_threshold allows, an error is displayed and set ignore_threshold true may be added to ignore this warning.</description></item><item><title>expiration num</title><link>https://docs.siridb.net/database/alter_database/expiration_num/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.siridb.net/database/alter_database/expiration_num/</guid><description>When the expiration_num is enabled than number shards that are older than the provided value will be dropped. This setting should be an integer value with the time precision of the database.
By default this setting is disabled.
Examples # Suppose we have a second precision database, # then this will drop number shards, older than 4 weeks alter database set expiration_num 3600*24*7*4 # Disable shard expiration: alter database set expiration_num 0 After setting the expiration_num that results in more shards being dropped than the drop_threshold allows, an error is displayed and set ignore_threshold true may be added to ignore this warning.</description></item><item><title>list limit</title><link>https://docs.siridb.net/database/alter_database/list_limit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.siridb.net/database/alter_database/list_limit/</guid><description>Change the maximum value which can be used as a limit for a list statement. The default and recommended value is set to ten thousand to prevent queries which could take a large amount of memory. The value must be greater than or equal to 1000.
Example # Set the list limit to 50 thousand. alter database set list_limit 50000</description></item><item><title>select points limit</title><link>https://docs.siridb.net/database/alter_database/select_points_limit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.siridb.net/database/alter_database/select_points_limit/</guid><description>Change the maximum points which can be returned by a select query. The default and recommended value is set to one million points. This value is chosen to prevent a single query for taking to much memory and ensures that SiriDB can respond to almost any query in a reasonable amount of time.
Example # Increase the select points limit to 5 million alter database set select_points_limit 5000000</description></item><item><title>set timezone</title><link>https://docs.siridb.net/database/alter_database/set_timezone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.siridb.net/database/alter_database/set_timezone/</guid><description>Change the timezone for the database. When using a date/time in a query, SiriDB needs to convert the given date to a timestamp. Default NAIVE is used which means SiriDB is naive about the time zone and acts as if it&amp;rsquo;s a local time.
Warning
When using a SiriDB database over multiple time zones it&amp;rsquo;s probably best to set the time zone to anything other than NAIVE since with NAIVE the server receiving the query will convert the date to a local time-stamp.</description></item></channel></rss>